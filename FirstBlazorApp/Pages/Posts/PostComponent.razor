@using ForumAdminPanel.Models;
@using FirstBlazorApp.Pages.Answers
@using FirstBlazorApp.Auth
@inject PostService postService
@inject AnswerService answerService
@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider

<div class="card">
    <div class="card-header">
        @Post.Title
        <p>@Post.TimePostCreated</p>
    </div>
    <div class="card-body">
        <h5 class="card-title">@postService.GetUserCreatorOfPost(Post.UserId)</h5>
        <p class="card-text">@Post.Body</p>
         <AuthorizeView>
             <Authorized>
              <button class="btn btn-primary" @onclick="(()=>{AddAnswer(Post.Id);})">Give Answer</button>
            </Authorized>
        </AuthorizeView>
        <a href="#" class="btn btn-secondary">Edit</a>
        <a href="#" class="btn btn-warning">Delete</a>
    </div>
    <div>
        @if (answerService.GetAnswersForPost(Post.Id) != null)
        {
            @foreach (var answer in answerService.GetAnswersForPost(Post.Id))
            {
             <AnswerComponent Answer="answer"></AnswerComponent>          
            }
        }
        
    </div>
   
    @if (viewGiveAnswer)
    {
        <CreateAnswerComponent AddAnswer="AddNewAnswer" Post="Post"></CreateAnswerComponent>
    }
     
</div>

@code {
    [Parameter]
    public Post Post { get; set; }
    [Parameter]
    public Theme Theme { get; set; }

    bool viewGiveAnswer = false;

    public void AddAnswer(int postId)
    {
        viewGiveAnswer = true;
    }

    User CurrentUser = new User();

    async Task AddNewAnswer(Answer answer)
    {
        var customAuthstateProvider = (AuthProccedure)authStateProvider;
        User user= await customAuthstateProvider.GetCurrentUserAsync();

        await answerService.CreateAnswerAsync(Post.Id, user.Id, answer);
        answerService.GetAnswersForPost(Post.Id);
        viewGiveAnswer = false;

    }
}
