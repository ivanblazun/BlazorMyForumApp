@using ForumAdminPanel.Models;
@using FirstBlazorApp.Auth
@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider
@inject ThemeService themeService
@inject NavigationManager navManager
@inject ForumService forumService

﻿<div class="modal fade show" id="myModal"
      style="display:block; background-color: rgba(10,10,10,.8);"
      aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Title</h4>
                <button type="button" @onclick="(()=>CloseModal.InvokeAsync())" class="close">&times;</button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default" required>Title</span>
                    <input @bind="currentTheme.Title" placeholder="@Theme.Title" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Theme description</span>
                    <input @bind="currentTheme.ThemeBody" placeholder="@Theme.ThemeBody" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Themes Forum</span>
                    @*<input @bind="currentTheme.ForumId" type="number" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">*@
                  <select @bind="currentTheme.ForumId" required>
                       @foreach (var forum in forumService.GetAllForums())
                        {   
                            
                            <option value="@forum.Id">@forum.Name / @forum.Id</option>
                        }
                  </select>
                
                </div>

            </div>
            <button @onclick="(()=>{UpdateThemeAction(); CloseModal.InvokeAsync();})">Update theme</button>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int ThemeId { get; set; }
    [Parameter]
    public EventCallback<Theme> CloseModal { get; set; }
    [Parameter]
    public  Theme Theme { get; set; }
    [Parameter]
    public int ForumId { get; set; }


    Theme currentTheme = new() {};

    string location = "/singleforum/";

    async Task UpdateThemeAction()
    {
        await themeService.UpdateThemeAsync(currentTheme, Theme.Id);
        navManager.NavigateTo(location + ForumId.ToString(), true);
    }
}
