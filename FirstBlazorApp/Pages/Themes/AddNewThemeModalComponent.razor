@using ForumAdminPanel.Models;
@using FirstBlazorApp.Auth
@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider
@inject ThemeService themeService
﻿<div class="modal fade show" id="myModal" 
        style="display:block; background-color: rgba(10,10,10,.8);"
        aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Title</h4>
                <button type="button" @onclick="(()=>CloseModal.InvokeAsync())" class="close">&times;</button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Title</span>
                    <input @bind="newTheme.Title" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Theme description</span>
                    <input @bind="newTheme.ThemeBody" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                </div>

            </div>
            <button @onclick="(()=>{AddNewTheme(); CloseModal.InvokeAsync();})">Create theme</button>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int ForumId { get; set; }
    [Parameter]
    public EventCallback<Theme> CloseModal{ get; set; }

    Theme newTheme = new(){};

    async Task AddNewTheme()
    {
        var customAuthstateProvider = (AuthProccedure)authStateProvider;
        User user = await customAuthstateProvider.GetCurrentUserAsync();
             
        await themeService.CreateNewTheme(newTheme, user.Id, ForumId);       
    }
}
