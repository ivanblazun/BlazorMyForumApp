@page "/login"
@using FirstBlazorApp.Auth;

@inject UserAccountService userAccountService;
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<h3>Login</h3>

<div class="row">
    <div class=" col-4 ofset-lg-4 pt-4 pb-4 border">
        <div>
              <h3>Login</h3>
        </div>
        <div class="mb-3">
            <label>User name</label>
            <input @bind="model.UserName" class="form-control" placeholder="User name">
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input @bind="model.Password" type="password" class="form-control" placeholder="Password"/>
        </div>
        <div class="mb-3 d-grid gap-2">
            <button @onclick="Authenticate" class="btn btn-primary">Login</button>
        </div>
    </div>
</div>

@code {
    private class Model
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    private Model model= new Model();

    private async Task Authenticate()
    {
        var userAccount = userAccountService.GetByUserName(model.UserName);
        if (userAccount == null || userAccount.Password != model.Password)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }

        var customAuthstateProvider = (AuthProccedure)authStateProvider;
        await customAuthstateProvider.UpadateAuthState(new UserSession
        {
            UserName = userAccount.UserName,
            UserStatus = userAccount.UserStatus.ToString()
        });

        navManager.NavigateTo("/", true);
    }


}
