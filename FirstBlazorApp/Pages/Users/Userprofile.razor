@page "/userprofile/{id:int}"
@using FirstBlazorApp.Auth;
@using ForumAdminPanel.Models;
@attribute [Authorize(Roles = "1,2,3")]

@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider
@inject ImageService imageService
@inject UserService userService
@inject NavigationManager navManager


@if (ProfileMatchSessionUser)
{
<div class="d-flex" style="width: 18rem;">
    
    @if(imagePath != null)
    {
        <img src="@imagePath" class="card-img-top" alt="...">
    }
      <button @onclick="(()=>{ChangeProfileImage();})" class="btn btn-info btn-sm">Change profile image</button>
  
    @if (imageUploadSelect)
    {
        <FirstBlazorApp.Pages.Images.ImageUploadComponent></FirstBlazorApp.Pages.Images.ImageUploadComponent>
    }

    <div class="card-body">
        <h5 class="card-title">@user.UserName</h5>
        @switch (user.UserStatus)
        {   case 1 :
                <p>Status: Admin</p>
                break;
            case 2:
                <p>Status: Power user</p>
                break;
            case 3:
                <p>Status: User</p>
                break;
        }
        @if (userprofile != null)
        {
            <p class="card-text">My email: @user.Email</p>
            <p class="card-text">First name: @userprofile.FirstName</p>
            <p class="card-text">Last name: @userprofile.LastName</p>
             <p class="card-text">My UserID: @userprofile.UserId</p>
        }
    </div>
        @if (userprofile != null)
    {
        <div class="card-body">
            <h5 class="card-title">About myself:</h5>
            <p class="card-text">@userprofile.AboutMyself</p
        </div>
        
    }

</div>
    <div>
        <UpdateCurrentUserComponent CurrentUser="user" id="id"></UpdateCurrentUserComponent>
    </div>
    @if (userprofile != null)
    {
        <div>
            <UpdateCurrentUserProfileComponent SessionUser="user" id="id"></UpdateCurrentUserProfileComponent>
        </div>
    }
     @if (userprofile == null)
    {
        <div>
           <CreateUserProfileComponent SessionUser="user" id="id"></CreateUserProfileComponent>
        </div>
    }

  
}
else
{
    <div>Not your profile</div>
}
@code {
    [Parameter]
    public int id { get; set; }
    User user = new();
    ForumAdminPanel.Models.UserProfile userprofile = new();

    string imagePath = "";

    bool imageUploadSelect = false;

    bool ProfileMatchSessionUser;

    bool changeCurrenUser;
  
    protected override async Task OnInitializedAsync()
    {   
        var customAuthstateProvider = (AuthProccedure)authStateProvider;
        User sessionUser = await customAuthstateProvider.GetCurrentUserAsync();


        user = userService.GetUser(id);

        if(sessionUser.Id == user.Id)
        {
            ProfileMatchSessionUser = true;

            imagePath = await imageService.GetImage(user);
            userprofile = userService.GetUserProfile(user.Id);
      
        }
        else
        {
            ProfileMatchSessionUser = false;
        }


    }

    private void GoToUser(int id)
    {
        string location = "/updateuser/" + id.ToString();
        navManager.NavigateTo(location, true);
    }
    private void GoToMyUserProfile(int id)
    {
        string location = "/updatecurrentuserprofile/" + id.ToString();
        navManager.NavigateTo(location, true);
    }
    private void ChangeProfileImage()
    {
        if (imageUploadSelect == false)
        {
            imageUploadSelect = true;
        }
        else { imageUploadSelect = false;}
    }

}
