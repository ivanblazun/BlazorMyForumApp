@page "/userprofile/{id:int}"
@using FirstBlazorApp.Auth;
@using ForumAdminPanel.Models;
@attribute [Authorize(Roles = "1,2,3")]

@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider
@inject ImageService imageService
@inject UserService userService
@inject NavigationManager navManager


@if (ProfileMatchSessionUser)
{
<div class="d-flex" style="width: 18rem;">
    
    @if(imagePath != null)
    {
        <img src="@imagePath" class="card-img-top" alt="...">
    }

    <div class="card-body">
        <h5 class="card-title">@user.UserName</h5>
        @switch (user.UserStatus)
        {   case 1 :
                <p>Status: Admin</p>
                break;
            case 2:
                <p>Status: Power user</p>
                break;
            case 3:
                <p>Status: User</p>
                break;
        }
        @if (userprofile != null)
        {
            <p class="card-text">My email: @user.Email</p>
            <p class="card-text">First name: @userprofile.FirstName</p>
            <p class="card-text">Last name: @userprofile.LastName</p>
             <p class="card-text">My UserID: @userprofile.UserId</p>
        }
    </div>
    @if (userprofile != null)
    {
        <div class="card-body">
            <h5 class="card-title">About myself:</h5>
            <p class="card-text">@userprofile.AboutMyself</p
        </div>
    }
</div>  

    <button @onclick="(()=>{ChangeProfileImage();})" class="btn btn-dark mb-2 mt-2">Change profile image</button>
    <button class="btn btn-info mb-2 mt-2" onclick="@(()=>ShowUserProperties())">Update user properties</button>
    <button class="btn btn-success mb-2 mt-2" onclick="@(()=>ShowUpdateProfile())">Update user profile</button>

    <div style=@(!ShowChangeProperties ? "display:none" : "display:block")>
        <UpdateCurrentUserComponent CurrentUser="user" id="id"></UpdateCurrentUserComponent>
    </div>

    @if(userprofile != null)
    {   
        <div style=@(!ShowChangeProfile ? "display:none" : "display:block")>
            <UpdateCurrentUserProfileComponent SessionUser="user" id="id"></UpdateCurrentUserProfileComponent>
        </div>
    }

    @if (userprofile == null)
    {   <button class="btn btn-outline-light mb-2 mt-2">Create user profile</button>
        <div>
           <CreateUserProfileComponent SessionUser="user" id="id"></CreateUserProfileComponent>
        </div>
    }

    @if (imageUploadSelect){<FirstBlazorApp.Pages.Images.ImageUploadComponent></FirstBlazorApp.Pages.Images.ImageUploadComponent>}
}

else
{
    <div>Not your profile</div>
}
@code {
    [Parameter]
    public int id { get; set; }
    User user = new();
    ForumAdminPanel.Models.UserProfile userprofile = new();

    string imagePath = "";
    bool imageUploadSelect = false;
    bool ProfileMatchSessionUser;
    bool ShowChangeProperties = false;
    bool ShowChangeProfile = false;

    //bool changeCurrenUser;

    protected override async Task OnInitializedAsync()
    {   
        var customAuthstateProvider = (AuthProccedure)authStateProvider;
        User sessionUser = await customAuthstateProvider.GetCurrentUserAsync();
        user = userService.GetUser(id);

        if(sessionUser.Id == user.Id)
        {
            ProfileMatchSessionUser = true;
            imagePath = await imageService.GetImage(user);
            userprofile = userService.GetUserProfile(user.Id);     
        }
        else
        {
            ProfileMatchSessionUser = false;
        }
    }
    // Toggle user properties
    private void ShowUserProperties()
    {
        if (!ShowChangeProperties){ShowChangeProperties=true;}
        else{ShowChangeProperties=false;}
    }

    // Toggle change user profile
    private void ShowUpdateProfile()
    {
        if(!ShowChangeProfile){ ShowChangeProfile = true; }
        else{ ShowChangeProfile = false; }
    }


    private void ChangeProfileImage()
    {
        if (imageUploadSelect == false){imageUploadSelect = true;}
        else { imageUploadSelect = false;}
    }

}
