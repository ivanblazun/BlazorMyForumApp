@using FirstBlazorApp.Auth;
@using ForumAdminPanel.Models;
@using System.ComponentModel.DataAnnotations;
@inject AuthenticationStateProvider authenticationStateProvider
@inject UserService userService
@inject NavigationManager navManager
@inject IJSRuntime js

<div class="border-light">
    <h3>Update My Profile</h3>

    <EditForm Model="@profile" OnSubmit="@SaveChanges">
        <div class="mb-3">
            <label for="firstName" class="form-label">First name</label>
            <input type="text" class="form-control" id="firstName" placeholder="@profile.FirstName" @bind="@profile.FirstName">
        </div>
        <div class="mb-3">
            <label for="lastName" class="form-label">Last Name</label>
            <input type="text" class="form-control" id="lastName" placeholder="@profile.LastName" @bind="@profile.LastName">
        </div>
        <div class="mb-3">
            <label for="avatar" class="form-label">Avatar</label>
            <input type="text" class="form-control" id="avatar" placeholder="@profile.Avatar" @bind="@profile.Avatar">
        </div>
        <div class="mb-3">
            <label for="AboutMyself" class="form-label">About myself</label>
            <input type="text" class="form-control" id="AboutMyself"  @bind="@profile.AboutMyself">
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    [Parameter]
    public User SessionUser { get; set; }

    private UserProfile profile { get; set; }

    bool profileBelongsToUser = false;

    protected override async Task OnInitializedAsync()
    {
        profile = userService.GetUserProfile(id);
    }

    public async Task<bool> CheckUserCurrentUser()
    {   
        var customAuthstateProvider = (AuthProccedure)authenticationStateProvider;
        User currentUser = await customAuthstateProvider.GetCurrentUserAsync();
        bool doesProfileBelongtoCurrentUser = currentUser.Id.Equals(id);
        return doesProfileBelongtoCurrentUser;
    } 

    private void SaveChanges()
    {
        userService.UpdateUserProfile(profile);
        js.InvokeVoidAsync("alert", "User shanges saved");
        string location = "/userprofile/" + SessionUser.Id.ToString();
        navManager.NavigateTo(location, true);

    }

}
