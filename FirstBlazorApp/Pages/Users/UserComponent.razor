@using ForumAdminPanel.Models;
@inject NavigationManager navManager
@inject ImageService imageService
@attribute [Authorize(Roles = "1,2,3")]
<div class="col-3 m-2">
<div class="card" style="width: 18rem;">
    <div class="card-body">
        @if(imageSrc != null)
            {
                <img src="@imageSrc" class="m-1" width="30px" height="30px" style="border-radius:50%" />
            }
            <h5 class="card-title">@User.UserName</h5>
        <p class="card-text">User status: @User.UserStatus</p>
               <AuthorizeView Roles="1">
            <Authorized>
        <p class="card-text">User email: @User.Email</p>
                </Authorized>
            </AuthorizeView>
        <p class="card-text">User Registerd date: @User.RegisteredDate</p>
        <AuthorizeView Roles="1">
            <Authorized>
                <div class="d-flex flex-column gap-1">
                    <div>
                        <button @onclick="@(()=>{GoToUser(User.Id);})" class="btn btn-info btn-sm">
                            Change user properties
                        </button>
                    </div>
                    <div>
                        <button @onclick="@(()=>{GoToUserProfile(User.Id);})" class="btn btn-outline-primary btn-sm">
                            Change user profile properties
                        </button>
                    </div>
                    </div>
            </Authorized>
            <NotAuthorized>
                <small style="color:red">Only admin can edit user profile or credentials</small>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

</div>


@code {
    [Parameter]
    public  User User { get; set; }

    private string imageSrc;

    object image;

    private void GoToUser(int id)
    {
        string location = "/updateuser/" + id.ToString();
        navManager.NavigateTo(location, true);
    }
    private void GoToUserProfile(int id)
    {
        string location = "/updateuserprofile/" + id.ToString();
        navManager.NavigateTo(location, true);
    }

    protected override async Task OnInitializedAsync()
    {
        
        if (await imageService.GetImage(User) != null)
        {
            imageSrc = await imageService.GetImage(User);
        }
    }

}
